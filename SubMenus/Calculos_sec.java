/**
 *
 * @author Sofia Leal e Kauê Freitas
 */

package SubMenus;

import java.awt.Color;
import InterfaceGeral.Interface_E_Funcionamento_Geral.IP;
import InterfaceGeral.Interface_E_Funcionamento_Geral.Subnet;
import InterfaceGeral.Interface_E_Funcionamento_Geral;

public class Calculos_sec extends javax.swing.JInternalFrame {
  
    public static String ultimoIP;
    public static String ultimaSubnet;
    public static String ultimosResultados;
    
    // Adicione este método
    public String[] getDadosParaEdicao() {
        // Verifica se os componentes foram inicializados
        if (ipTeste == null || subnetTeste == null || resultadosTeste == null) {
            System.err.println("Aviso: Componentes não inicializados!");
            return new String[]{"", "", ""}; // Retorna valores vazios se houver problema
        }
        return new String[]{
            ipTeste.getText(), 
            subnetTeste.getText(), 
            resultadosTeste.getText()
        };
    }
    
    public boolean isReadyForEditing() {
        return ipTeste != null && subnetTeste != null && resultadosTeste != null;
    }
    
    public Calculos_sec() {
        initComponents();
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        botaocalcular = new javax.swing.JButton();
        ipTeste = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        subnetTeste = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        erroIP = new javax.swing.JLabel();
        erroSubnet = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        resultadosTeste = new javax.swing.JTextArea();

        setClosable(true);

        botaocalcular.setText("Calcular");
        botaocalcular.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaocalcularActionPerformed(evt);
            }
        });

        ipTeste.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ipTesteActionPerformed(evt);
            }
        });

        jLabel1.setText("IP");

        jLabel2.setText("Máscara");

        jLabel3.setText("Resultados:");

        erroIP.setText("                   ");

        erroSubnet.setText("                 ");

        resultadosTeste.setEditable(false);
        resultadosTeste.setColumns(20);
        resultadosTeste.setRows(5);
        resultadosTeste.setVerifyInputWhenFocusTarget(false);
        jScrollPane1.setViewportView(resultadosTeste);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(ipTeste, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(erroIP))
                    .addComponent(jLabel2)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(subnetTeste, javax.swing.GroupLayout.PREFERRED_SIZE, 297, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(erroSubnet)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 56, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(54, 54, 54))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(186, 186, 186))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(botaocalcular)
                        .addGap(15, 15, 15))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(ipTeste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(erroIP))
                        .addGap(39, 39, 39)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(subnetTeste, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(erroSubnet)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 331, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 58, Short.MAX_VALUE)
                .addComponent(botaocalcular, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(19, 19, 19))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ipTesteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ipTesteActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ipTesteActionPerformed

    private void botaocalcularActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaocalcularActionPerformed
        String textoIP = ipTeste.getText().trim();
        String textoSubnet = subnetTeste.getText().trim();
        
        ultimoIP = textoIP;
        ultimaSubnet = textoSubnet;
        ultimosResultados = resultadosTeste.getText();

        erroIP.setText(" ");
        erroSubnet.setText(" ");

        boolean erro = false;

        if(!Interface_E_Funcionamento_Geral.ValidationUtils.validarIP(textoIP) || (!Interface_E_Funcionamento_Geral.ValidationUtils.validarValor(textoIP))) {
            erroIP.setText( "IP inválido!");
            erroIP.setForeground(Color.red);
            erro = true;
        }

        if(!Interface_E_Funcionamento_Geral.ValidationUtils.validarMascara(textoSubnet) || (!Interface_E_Funcionamento_Geral.ValidationUtils.validarValor(textoSubnet))){
            erroSubnet.setText("Netmask inválida");
            erroSubnet.setForeground(Color.red);
            erro = true;
        }    
        if (erro) return;
        
        IP ip = new IP (textoIP);
        Subnet subnet = new Subnet (textoIP, textoSubnet);
        
        resultadosTeste.setText ("=== IP ===\n\n" +
        "Decimal: " + ip.getEndereco() + "\n" +
        "Binário: " + ip.getBinario() +"\n\n" +
        
        "=== Máscara de Sub-rede === \n\n" +
        "Decimal: " + subnet.getEnderecomask() + "\n" +
        "Binário: " + subnet.getBinariomask() + "\n" +
        "CIDR: /" + subnet.getCidr() + "\n\n" +
        
        "=== Wildcard ===\n\n" +
        "Decimal: " + subnet.getWildcard() + "\n" +
        "Binário: " + subnet.getWildcardBinario() + "\n\n" +
        
        "=== Endereço de Rede ===\n\n" +
        "Decimal: " + subnet.getEnderecoRede() + "\n" +
        "Binário: " + subnet.getEnderecoRedeBinario() + "\n" +
        "Classe: " + subnet.getClasseRede() + "\n\n" +
        
        "=== Broadcast ===\n\n" +
        "Decimal: " + subnet.getBroadcast() + "\n" +
        "Binário: " + subnet.getBroadcastBinario() + "\n\n" +
        
        "=== HostMin ===\n\n" +
        "Decimal: " + subnet.getHostMin() + "\n" +
        "Binário: " + subnet.getHostMinBinario() + "\n\n" +
        
        "\n=== HostMax === \n\n" +
        "Decimal: " + subnet.getHostMax() + "\n" +
        "Binário: " + subnet.getHostMaxBinario() + "\n\n" +
        
        "=== Total ===\n\n" +
        "Hosts Válidos: " + subnet.getNumeroHostsValidos());
        
        botaocalcular.setText("Calcular");
    }//GEN-LAST:event_botaocalcularActionPerformed

    
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JButton botaocalcular;
    private javax.swing.JLabel erroIP;
    private javax.swing.JLabel erroSubnet;
    private javax.swing.JTextField ipTeste;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private static javax.swing.JTextArea resultadosTeste;
    private javax.swing.JTextField subnetTeste;
    // End of variables declaration//GEN-END:variables
}

package SubMenus;

import InterfaceGeral.Interface_E_Funcionamento_Geral;
import SubMenus.Calculos_sec;
import static SubMenus.Calculos_sec.ultimaSubnet;
import static SubMenus.Calculos_sec.ultimoIP;
import static SubMenus.Calculos_sec.ultimosResultados;
import java.awt.Color;

public class Edit_calculos_sec extends javax.swing.JInternalFrame {
    public Edit_calculos_sec() {
        initComponents();
        // Pega os valores diretamente das variáveis estáticas
        ipEditado.setText(Calculos_sec.ultimoIP != null ? Calculos_sec.ultimoIP : "");
        subnetEditado.setText(Calculos_sec.ultimaSubnet != null ? Calculos_sec.ultimaSubnet : "");
        Convercao_editada.setText(Calculos_sec.ultimosResultados != null ? Calculos_sec.ultimosResultados : "");
    }
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        editar = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        Convercao_editada = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        erroIP = new javax.swing.JLabel();
        erroSubnet = new javax.swing.JLabel();
        ipEditado = new javax.swing.JTextField();
        subnetEditado = new javax.swing.JTextField();

        setClosable(true);

        jLabel1.setText("IP:");

        jLabel2.setText("Máscara:");

        editar.setText("Editar");
        editar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                editarActionPerformed(evt);
            }
        });

        Convercao_editada.setEditable(false);
        Convercao_editada.setColumns(20);
        Convercao_editada.setRows(5);
        jScrollPane1.setViewportView(Convercao_editada);

        jLabel3.setText("Conversão editada:");

        erroIP.setText(" ");

        erroSubnet.setText("                ");

        ipEditado.setText("          ");

        subnetEditado.setText("            ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(editar)
                .addGap(34, 34, 34))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2)
                    .addComponent(ipEditado)
                    .addComponent(subnetEditado, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(erroIP, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(erroSubnet, javax.swing.GroupLayout.DEFAULT_SIZE, 80, Short.MAX_VALUE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 83, Short.MAX_VALUE)
                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(173, 173, 173))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 293, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(44, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 266, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 72, Short.MAX_VALUE)
                        .addComponent(editar)
                        .addGap(14, 14, 14))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(erroIP, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(42, 42, 42)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(ipEditado, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addComponent(subnetEditado, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(erroSubnet, javax.swing.GroupLayout.PREFERRED_SIZE, 34, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void editarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_editarActionPerformed
        String textoIP = ipEditado.getText().trim();
        String textoSubnet = subnetEditado.getText().trim();
        
        ultimoIP = textoIP;
        ultimaSubnet = textoSubnet;
        ultimosResultados = Convercao_editada.getText();

        erroIP.setText(" ");
        erroSubnet.setText(" ");

        boolean erro = false;

        if(!Interface_E_Funcionamento_Geral.ValidationUtils.validarIP(textoIP) || (!Interface_E_Funcionamento_Geral.ValidationUtils.validarValor(textoIP))) {
            erroIP.setText( "IP inválido!");
            erroIP.setForeground(Color.red);
            erro = true;
        }

        if(!Interface_E_Funcionamento_Geral.ValidationUtils.validarMascara(textoSubnet) || (!Interface_E_Funcionamento_Geral.ValidationUtils.validarValor(textoSubnet))){
            erroSubnet.setText("Netmask inválida");
            erroSubnet.setForeground(Color.red);
            erro = true;
        }    
        if (erro) return;
        
        Interface_E_Funcionamento_Geral.IP ip = new Interface_E_Funcionamento_Geral.IP (textoIP);
        Interface_E_Funcionamento_Geral.Subnet subnet = new Interface_E_Funcionamento_Geral.Subnet (textoIP, textoSubnet);
        
        Convercao_editada.setText ("=== IP ===\n\n" +
        "Decimal: " + ip.getEndereco() + "\n" +
        "Binário: " + ip.getBinario() +"\n\n" +
        
        "=== Máscara de Sub-rede === \n\n" +
        "Decimal: " + subnet.getEnderecomask() + "\n" +
        "Binário: " + subnet.getBinariomask() + "\n" +
        "CIDR: /" + subnet.getCidr() + "\n\n" +
        
        "=== Wildcard ===\n\n" +
        "Decimal: " + subnet.getWildcard() + "\n" +
        "Binário: " + subnet.getWildcardBinario() + "\n\n" +
        
        "=== Endereço de Rede ===\n\n" +
        "Decimal: " + subnet.getEnderecoRede() + "\n" +
        "Binário: " + subnet.getEnderecoRedeBinario() + "\n" +
        "Classe: " + subnet.getClasseRede() + "\n\n" +
        
        "=== Broadcast ===\n\n" +
        "Decimal: " + subnet.getBroadcast() + "\n" +
        "Binário: " + subnet.getBroadcastBinario() + "\n\n" +
        
        "=== HostMin ===\n\n" +
        "Decimal: " + subnet.getHostMin() + "\n" +
        "Binário: " + subnet.getHostMinBinario() + "\n\n" +
        
        "\n=== HostMax === \n\n" +
        "Decimal: " + subnet.getHostMax() + "\n" +
        "Binário: " + subnet.getHostMaxBinario() + "\n\n" +
        
        "=== Total ===\n\n" +
        "Hosts Válidos: " + subnet.getNumeroHostsValidos());
        
        editar.setText("Editado");
    }//GEN-LAST:event_editarActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea Convercao_editada;
    private javax.swing.JButton editar;
    private javax.swing.JLabel erroIP;
    private javax.swing.JLabel erroSubnet;
    private javax.swing.JTextField ipEditado;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField subnetEditado;
    // End of variables declaration//GEN-END:variables
}

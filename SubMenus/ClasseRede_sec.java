package SubMenus;

import java.awt.Color;
import InterfaceGeral.Interface_E_Funcionamento_Geral;
import static SubMenus.Calculos_sec.ultimoIP;

public class ClasseRede_sec extends javax.swing.JInternalFrame {
    public ClasseRede_sec() {
        initComponents();
        ipAnalise.setText(Calculos_sec.ultimoIP != null ? Calculos_sec.ultimoIP : "");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ipAnalise = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        tipoRede = new javax.swing.JTextField();
        info = new javax.swing.JButton();
        erroIP = new javax.swing.JLabel();

        setClosable(true);

        jLabel1.setText("Insira endereço IP:");

        jLabel2.setText("Classe de rede :");

        info.setText("Analisar");
        info.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                infoActionPerformed(evt);
            }
        });

        erroIP.setText("   ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(ipAnalise)
                            .addComponent(jLabel2)
                            .addComponent(tipoRede, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(erroIP, javax.swing.GroupLayout.DEFAULT_SIZE, 64, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(info)))
                .addGap(41, 41, 41))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ipAnalise, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(erroIP))
                .addGap(50, 50, 50)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(tipoRede, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                .addComponent(info)
                .addGap(45, 45, 45))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void infoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_infoActionPerformed
        String textoIP = ipAnalise.getText().trim();
        
        ultimoIP = textoIP;

        erroIP.setText(" ");

        boolean erro = false;

        if(!Interface_E_Funcionamento_Geral.ValidationUtils.validarIP(textoIP) || (!Interface_E_Funcionamento_Geral.ValidationUtils.validarValor(textoIP))){
            erroIP.setText("IP inválido!");
            erroIP.setForeground(Color.red);
            erro = true;
        }    
        if (erro) return;
        
        Interface_E_Funcionamento_Geral.IP ip = new Interface_E_Funcionamento_Geral.IP (textoIP);
        Interface_E_Funcionamento_Geral.Subnet subnet = new Interface_E_Funcionamento_Geral.Subnet (textoIP, "255.255.255.0");
        
        tipoRede.setText ("Classe da rede: " + subnet.getClasseRede());
        
        info.setText("Analisado");
    }//GEN-LAST:event_infoActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel erroIP;
    private javax.swing.JButton info;
    private javax.swing.JTextField ipAnalise;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField tipoRede;
    // End of variables declaration//GEN-END:variables
}
